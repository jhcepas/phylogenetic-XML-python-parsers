This repository provides general Python bindings for some phylogenetic
XML formats, such as PhyloXML, NexML or OrthoXML. Parsers are
automatically generated by the generateDS.py (gDS) tool, although
modifications in the gDS code are sometimes required to deal with the
peculiarities of some XML schemes. However, I'm in contact with the
gDS developer, Dave Kuhlman, to maintain gDS code in sync with the
needs of bioXML standards. Parsers are updated regularly to reflect
last changes in the XML schemes.

Since parsers are independent from any external tool, they provide the
bases for input/output XML support to any Python application or
toolkit. They facilitate also the exchange of annotated phylogenetic
datasets among different tools.

LICENSE AND DISTRIBUTION 

Since the code of parsers is auto-generated, they are free of any
license or restriction.

HOW TO USE THE PARSERS

Parsers can be used as Python modules. A root class named as the
phylogenetic format (i.e. Phyloxml, Nexml) can be found in the
corresponding module. A "build" method is present in the main class,
that allows to read XML data and convert the into Python objects.
Note that each XML element will be represented by a Python class, so
you can even create datasets from scratch in a programmatic way.

As an example, the ETE toolkit integrates several of these parses to
provide tree analysis, manipulation and visualization and features
directly from XML files.









